import os

trues = set(['1', 'y', 'yes', 'true'])
def to_bool(string):
    return string.lower() in trues


ALLOW_UNSAFE_URL = to_bool(os.environ.get('THUMBOR_ALLOW_UNSAFE', 'false'))
SECURITY_KEY = os.environ.get('THUMBOR_SECURITY_KEY')
LOADER = 'thumbor.loaders.https_loader'

# TC_AWS General Settings
TC_AWS_REGION = os.environ.get('TC_AWS_REGION', 'us-east-1')

# Original Storage Settings
STORAGE = 'thumbor.storages.no_storage'  # Do not store originals

# Result Storage Settings
RESULT_STORAGE = 'tc_aws.result_storages.s3_storage'
TC_AWS_RESULT_STORAGE_BUCKET = os.environ.get('TC_AWS_BUCKET')
TC_AWS_MAX_RETRY = int(os.environ.get('TC_AWS_MAX_RETRY', '0'))
TC_AWS_STORE_METADATA = False

# RESULT_STORAGE_STORES_UNSAFE = True

# Enable animated gifs
ALLOW_ANIMATED_GIFS = True
USE_GIFSICLE_ENGINE = True

#Error handling
USE_CUSTOM_ERROR_HANDLING = True
ERROR_HANDLER_MODULE = 'sentry'
SENTRY_DSN_URL = os.environ.get('SENTRY_DSN')
SENTRY_ENVIRONMENT = os.environ.get('SENTRY_ENVIRONMENT')

# METRICS = 'tc_prometheus.metrics.prometheus_metrics'
# PROMETHEUS_SCRAPE_PORT = 9655 # Port the prometheus client should listen on
